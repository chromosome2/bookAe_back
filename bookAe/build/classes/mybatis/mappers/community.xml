<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="mapper.community">
	<!-- magazineResult -->
	<resultMap type="communityVO" id="magazineResult">
		<result property="magazine_num" column="magazine_num"/>
		<result property="magazine_title" column="magazine_title"/>
		<result property="magazine_genre" column="magazine_genre"/>
		<result property="magazine_date" column="magazine_date"/>
	</resultMap>

	<!-- article 정보 -->
	<resultMap type="communityVO" id="communityResult">
		<result property="board_num" column="board_num"/>
		<result property="board_title" column="board_title"/>
		<result property="board_genre" column="board_genre"/>
		<result property="board_like" column="board_like"/>
		<result property="board_date" column="board_date"/>
		<result property="nickname" column="nickname"/>
	</resultMap>
	
	<!-- 댓글 정보 -->
	<resultMap type="communityVO" id="commentResult">
		<result property="board_num" column="board_num"/>
		<result property="comment_num" column="comment_num"/>
		<result property="comment_date" column="comment_date"/>
		<result property="comment_parent" column="comment_parent"/>
		<result property="comment_content" column="comment_content"/>
		<result property="nickname" column="nickname"/>
		<result property="annot_nickname" column="annot_nickname"/>
	</resultMap>
	
	<!-- 감상평 게시판의 모든 게시글의 정보 가져오기 -->
	<select id="community_list_view" resultMap="communityResult">
		<![CDATA[
			select board_num, board_title, board_genre, 
			(SELECT NVL(count(*),0) FROM liketbl WHERE board_num=b.board_num) as board_like,  
			board_date, j.nickname  
			from boardtbl b, jointbl j where b.id=j.id 
			order by board_num desc
		]]>
	</select>
	
	<!-- 추천수가 제일 높은, 그 다음으로는 조회수가 제일 높은 게시글 두개만 가져오기 -->
	<select id="two_best_community_list" resultMap="communityResult">
		<![CDATA[
			SELECT * FROM (select board_num, board_title, board_genre, 
			(SELECT NVL(count(*),0) FROM liketbl WHERE board_num=b.board_num) as board_like, 
			board_date, j.nickname 
			from boardtbl b, jointbl j where b.id=j.id order by board_like desc, board_view desc) A WHERE not board_like=0 and rownum<=2
		]]>
	</select>
	
	<!-- 게시글의 총 개수 -->
	<select id="totalArticle" resultType="_int" parameterType="bookae.util.PagingVO">
		<![CDATA[
			SELECT count(*) as totalArticle from boardtbl b, jointbl j WHERE b.id=j.id 
		]]>
		<if test="head != '' and head != null"> 
			<choose>
				<when test="head == 'total'">
					and (nickname like '%'||#{search_community}||'%' 
		            or board_title like '%'||#{search_community}||'%' 
		            or board_content like '%'||#{search_community}||'%') 
				</when>
				<when test="head == 'board_title'">
					and board_title like '%'||#{search_community}||'%' 
				</when>
				<when test="head == 'nickname'">
					and nickname like '%'||#{search_community}||'%' 
				</when>
				<when test="head == 'board_content'">
					and board_content like '%'||#{search_community}||'%' 
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 게시글 추가 -->
	<insert id="addArticle" parameterType="communityVO">
		<![CDATA[
			INSERT INTO boardtbl(board_num, board_title, id, board_view, board_genre, board_content) 
			VALUES((SELECT NVL(MAX(board_num),0)+1 FROM boardtbl), #{board_title}, #{id}, 0, #{board_genre}, #{board_content})
		]]>
	</insert>
	
	<!-- 게시글 수정 -->
	<update id="modArticle" parameterType="communityVO">
		<![CDATA[
			update boardtbl set board_title=#{board_title}, board_content=#{board_content}, board_genre=#{board_genre} 
			where board_num=#{board_num}
		]]>
	</update>
	
	<!-- 한 게시글 상세 보기 -->
	<select id="viewArticle" resultType="communityVO" parameterType="int">
		<![CDATA[
			SELECT * FROM boardtbl WHERE board_num=#{board_num}
		]]>
	</select>
	
	<!-- 조회수 올리기 -->
	<update id="updateBoardView" parameterType="int">
		<![CDATA[
			UPDATE boardtbl SET board_view=board_view+1 WHERE board_num=#{board_num}
		]]>
	</update>
	
	<!-- 닉네임 가져오기 -->
	<select id="getNickname" resultType="String" parameterType="String">
		<![CDATA[
			SELECT nickname FROM jointbl WHERE id=#{id}
		]]>
	</select>
	
	<!-- 좋아요를 눌렀었는지 여부 확인 -->
	<select id="likeIs" resultType="String" parameterType="communityVO">
		<![CDATA[
			SELECT DECODE(count(*), 1, 'true', 'false') 
			AS RESULT FROM liketbl 
			WHERE id=#{id} and board_num=#{board_num}
		]]>
	</select>
	
	<!-- 좋아요 개수 가져오기 -->
	<select id="getBoardLike" resultType="_int" parameterType="int">
		<![CDATA[
			SELECT NVL(count(*),0) AS board_like FROM liketbl WHERE board_num=#{board_num}
		]]>
	</select>
	
	<!-- 좋아요 추가 -->
	<insert id="addLike" parameterType="communityVO">
		<![CDATA[
			INSERT INTO liketbl (id, board_num) 
			VALUES(#{id}, #{board_num})
		]]>
	</insert>
	
	<!-- 좋아요 취소 -->
	<delete id="delLike" parameterType="communityVO">
		<![CDATA[
			DELETE FROM liketbl WHERE id=#{id} AND board_num=#{board_num}
		]]>
	</delete>
	
	<!-- 페이징 처리 후 게시글 조회 -->
	<select id="pagingBoard" resultMap="communityResult" parameterType="bookae.util.PagingVO">
			SELECT * FROM 
			(SELECT ROWNUM rn, A.* FROM 
			(SELECT board_num, board_title, board_genre, 
			(SELECT NVL(count(*),0) FROM liketbl WHERE board_num=b.board_num) as board_like,  
			board_date, j.nickname  
			FROM boardtbl b, jointbl j WHERE b.id=j.id 
			<if test="head != '' and head != null">
				<choose>
					<when test="head == 'total'">
						and (nickname like '%'||#{search_community}||'%' 
			            or board_title like '%'||#{search_community}||'%' 
			            or board_content like '%'||#{search_community}||'%') 
					</when>
					<when test="head == 'board_title'">
						and (board_title like '%'||#{search_community}||'%') 
					</when>
					<when test="head == 'nickname'">
						and (nickname like '%'||#{search_community}||'%') 
					</when>
					<when test="head == 'board_content'">
						and (board_content like '%'||#{search_community}||'%') 
					</when>
				</choose>
			</if>
			ORDER BY board_num desc) A
			)
			WHERE rn BETWEEN #{start} AND #{end}
	</select>
	
	<!-- article 삭제 -->
	<delete id="delArticle" parameterType="communityVO">
		<![CDATA[
			DELETE FROM boardtbl WHERE id=#{id} AND board_num=#{board_num}
		]]>
	</delete>
	
	<!-- article 삭제시 좋아요 모두 삭제 -->
	<delete id="deleteLikeOfArticle" parameterType="int">
		<![CDATA[
			DELETE FROM liketbl WHERE board_num=#{board_num}
		]]>
	</delete>
	
	<!-- article 삭제시 관련 댓글 모두 삭제 -->
	<delete id="deleteCommentOfArticle" parameterType="int">
		<![CDATA[
			DELETE FROM commenttbl WHERE board_num=#{board_num}
		]]>
	</delete>
	
	<!-- parent 댓글 가져오기 -->
	<select id="boardParentCommentList" resultMap="commentResult" parameterType="int">
		<![CDATA[
			SELECT c.*, j.nickname FROM commenttbl c, jointbl j 
			WHERE board_num=#{board_num} AND comment_parent=0 AND c.id=j.id 
			ORDER BY comment_num
		]]>
	</select>
	
	<!-- child 댓글 가져오기 -->
	<select id="boardChildCommentList" resultMap="commentResult" parameterType="int">
		<![CDATA[
			SELECT c.*, j.nickname, 
			    (SELECT nickname FROM jointbl WHERE id=
			        (SELECT id FROM commenttbl WHERE comment_num=c.comment_annot)) 
			    as annot_nickname 
			FROM commenttbl c, jointbl j 
			WHERE board_num=#{board_num} AND not comment_parent=0 AND c.id=j.id 
			ORDER BY comment_num
		]]>
	</select>
	
	<!-- 댓글 하나 가져오기 -->
	<select id="getComment" resultType="communityVO" parameterType="int">
		<![CDATA[
			SELECT c.*, j.nickname FROM commenttbl c, jointbl j 
			WHERE comment_num=#{comment_num} AND c.id=j.id
		]]>
	</select>
	
	<!-- 댓글 개수 가져오기 -->
	<select id="total_cntComment" resultType="_int" parameterType="int">
		<![CDATA[
			SELECT NVL(count(*),0) AS total_cntComment FROM commenttbl WHERE board_num=#{board_num} AND deleteis=1
		]]>
	</select>
	
	<!-- 댓글 작성하기 -->
	<insert id="addParentComment" parameterType="communityVO">
		<![CDATA[
			INSERT INTO commenttbl (board_num, comment_num,id, comment_parent, comment_content, comment_annot)  
			VALUES(#{board_num}, (SELECT NVL(MAX(comment_num),0)+1 FROM commenttbl), #{id}, 0, #{comment_content}, 0)
		]]>
	</insert>
	
	<!-- 댓글 삭제하기 -->
	<delete id="delComment" parameterType="int">
		<![CDATA[
			DELETE FROM commenttbl WHERE comment_num=#{comment_num}
		]]>
	</delete>
	
	<!-- 게시글삭제 할때, 댓글 완전 삭제 -->
	<delete id="delCommentOfArticle" parameterType="int">
		<![CDATA[
			DELETE FROM commenttbl WHERE board_num=#{board_num}
		]]>
	</delete>
	
	<!-- 관련 댓글 삭제하기 -->
	<delete id="delReplyRelatedComment" parameterType="int">
		<![CDATA[
			DELETE FROM commenttbl WHERE comment_parent=#{comment_num}
		]]>
	</delete>
	
	<!-- 부모댓글인지 확인 -->
	<select id="getComment_parent" parameterType="int" resultType="int">
		<![CDATA[
			SELECT comment_parent FROM commenttbl WHERE comment_num=#{comment_num}
		]]>
	</select>
	
	<!-- 자식댓글 삭제를 위한 수정 -->
	<update id="delChildComment" parameterType="communityVO">
		<![CDATA[
			update commenttbl set deleteis=0 
			where comment_num=#{comment_num}
		]]>
	</update>
	
	<!-- 댓글 수정 -->
	<update id="modComment" parameterType="communityVO">
		<![CDATA[
			update commenttbl set comment_content=#{comment_content} 
			where comment_num=#{comment_num}
		]]>
	</update>
	
	<!-- 답글 작성하기 -->
	<insert id="replyComment" parameterType="communityVO">
		<![CDATA[
			INSERT INTO commenttbl (board_num, comment_num,id, comment_parent, comment_content, comment_annot)  
			VALUES(#{board_num}, (SELECT NVL(MAX(comment_num),0)+1 FROM commenttbl), #{id}, #{comment_parent}, #{comment_content}, #{comment_annot})
		]]>
	</insert>
	
	<!-- 답글의 comment_parent 구해오기 -->
	<select id="ReGetComment_parent" parameterType="int" resultType="int">
		<![CDATA[
			SELECT comment_parent FROM commenttbl WHERE comment_num=#{comment_annot}
		]]>
	</select>
	
	<!-- 마이페이지 - 좋아요 게시글의 총 개수 -->
	<select id="totalLikeArticle" resultType="_int" parameterType="String">
		<![CDATA[
			select count(*) from liketbl where id=#{id}
		]]>
	</select>
			
	<!-- 마이페이지 - 페이징 처리 후 좋아요 게시글 조회 -->
	<select id="pagingLikeBoard" resultMap="communityResult" parameterType="bookae.util.PagingVO">
		<![CDATA[
			SELECT * FROM 
			(SELECT ROWNUM rn, A.* FROM 
			(SELECT b.board_num, board_title, board_genre, 
			(SELECT NVL(count(*),0) FROM liketbl WHERE board_num=b.board_num) as board_like,  
			board_date, j.nickname  
			FROM boardtbl b, jointbl j, (SELECT board_num FROM liketbl WHERE id=#{id}) l WHERE b.id=j.id AND b.board_num=l.board_num
			ORDER BY board_num desc) A
			)
			WHERE rn BETWEEN #{start} AND #{end}
		]]>
	</select>
	
	<!-- 마이페이지 - 나의 게시글의 총 개수 -->
	<select id="totalMyArticle" resultType="_int" parameterType="String">
		<![CDATA[
			select count(*) from boardtbl where id=#{id}
		]]>
	</select>
			
	<!-- 마이페이지 - 페이징 처리 후 나의 게시글 조회 -->
	<select id="pagingMyBoard" resultMap="communityResult" parameterType="bookae.util.PagingVO">
		<![CDATA[
			SELECT * FROM 
			(SELECT ROWNUM rn, A.* FROM 
			(SELECT b.board_num, board_title, board_genre, 
			(SELECT NVL(count(*),0) FROM liketbl WHERE board_num=b.board_num) as board_like,  
			board_date, j.nickname  
			FROM boardtbl b, jointbl j 
			WHERE b.id=j.id AND b.id=#{id} 
			ORDER BY board_num desc) A
			)
			WHERE rn BETWEEN #{start} AND #{end}
		]]>
	</select>
	
	<!-- 마이 페이지 - 내가 쓴 모든 댓글 가져오기 -->
	<select id="myCommentList" resultMap="commentResult" parameterType="bookae.util.PagingVO">
		<![CDATA[
			SELECT * FROM 
		    (SELECT ROWNUM rn, A.* FROM 
		        (SELECT c.*, 
					    (SELECT nickname FROM jointbl WHERE id=
					        (SELECT id FROM commenttbl WHERE comment_num=c.comment_annot)) 
					    as annot_nickname, 
            			(SELECT board_title FROM boardtbl WHERE board_num=c.board_num) 
            			as board_title 
					FROM commenttbl c 
					WHERE id=#{id} AND not deleteis = 0 
					ORDER BY comment_num desc)
			    A ) 
			WHERE rn BETWEEN #{start} AND #{end}
		]]>
	</select>
	
	<!-- 마이 페이지 - 내가 쓴 모든 댓글 가져오기 -->
	<select id="totalMyComment" resultType="int" parameterType="String">
		<![CDATA[
			select count(*) from commenttbl where id=#{id} AND not deleteis = 0 
		]]>
	</select>
	
	<!-- 매거진 게시글의 총 개수 -->
	<select id="totalMagazine" resultType="_int" parameterType="bookae.util.PagingVO">
		<![CDATA[
			SELECT count(*) as totalMagazine from magazinetbl  
		]]>
		<if test="head != '' and head != null"> 
			<choose>
				<when test="head == 'total'">
					WHERE (magazine_title like '%'||#{search_community}||'%' 
		            or magazine_content like '%'||#{search_community}||'%') 
				</when>
				<when test="head == 'board_title'">
					WHERE magazine_title like '%'||#{search_community}||'%' 
				</when>
				<when test="head == 'board_content'">
					WHERE magazine_content like '%'||#{search_community}||'%' 
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 매거진 게시글 조회 -->
	<select id="magazineList" resultMap="magazineResult" parameterType="bookae.util.PagingVO">
			SELECT * FROM 
				(SELECT ROWNUM rn, A.* FROM 
					(SELECT magazine_num, magazine_title, magazine_genre,   
					magazine_date 
					FROM magazinetbl 
					<if test="head != '' and head != null">
						<choose>
							<when test="head == 'total'">
								WHERE (magazine_title like '%'||#{search_community}||'%' 
					            or magazine_content like '%'||#{search_community}||'%') 
							</when>
							<when test="head == 'board_title'">
								WHERE magazine_title like '%'||#{search_community}||'%' 
							</when>
							<when test="head == 'board_content'">
								WHERE magazine_content like '%'||#{search_community}||'%' 
							</when>
						</choose>
					</if>
					ORDER BY magazine_num desc) A
				)
			WHERE rn BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 매거진 추가 -->
	<insert id="addMagazine" parameterType="communityVO">
		<![CDATA[
			INSERT INTO magazinetbl(magazine_num, magazine_title, magazine_view, magazine_genre, magazine_content, magazine_image) 
			VALUES((SELECT NVL(MAX(magazine_num),0)+1 FROM magazinetbl), #{magazine_title}, 0, #{magazine_genre}, #{magazine_content}, #{magazine_image, jdbcType=VARCHAR})
		]]>
	</insert>
	
</mapper>