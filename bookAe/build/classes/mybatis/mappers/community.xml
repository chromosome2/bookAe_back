<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="mapper.community">

	<resultMap type="communityVO" id="communityResult">
		<result property="board_num" column="board_num"/>
		<result property="board_title" column="board_title"/>
		<result property="board_genre" column="board_genre"/>
		<result property="board_like" column="board_like"/>
		<result property="board_date" column="board_date"/>
		<result property="nickname" column="nickname"/>
	</resultMap>
	
	<!-- 감상평 게시판의 모든 게시글의 정보 가져오기 -->
	<select id="community_list_view" resultMap="communityResult">
		<![CDATA[
			select board_num, board_title, board_genre, 
			(SELECT NVL(count(*),0) FROM liketbl WHERE board_num=b.board_num) as board_like,  
			board_date, j.nickname  
			from boardtbl b, jointbl j where b.id=j.id 
			order by board_num desc
		]]>
	</select>
	
	<!-- 추천수가 제일 높은, 그 다음으로는 조회수가 제일 높은 게시글 두개만 가져오기 -->
	<select id="two_best_community_list" resultMap="communityResult">
		<![CDATA[
			SELECT * FROM (select board_num, board_title, board_genre, 
			(SELECT NVL(count(*),0) FROM liketbl WHERE board_num=b.board_num) as board_like, 
			board_date, j.nickname 
			from boardtbl b, jointbl j where b.id=j.id order by board_like desc, board_view desc) A WHERE not board_like=0 and rownum<=2
		]]>
	</select>
	
	<!-- 게시글의 총 개수 -->
	<select id="totalArticle" resultType="_int" parameterType="bookae.util.PagingVO">
		<![CDATA[
			SELECT count(*) as totalArticle from boardtbl b, jointbl j WHERE b.id=j.id 
		]]>
		<if test="head != '' and head != null"> 
			<choose>
				<when test="head == 'total'">
					and (nickname like '%'||#{search_community}||'%' 
		            or board_title like '%'||#{search_community}||'%' 
		            or board_content like '%'||#{search_community}||'%') 
				</when>
				<when test="head == 'board_title'">
					and board_title like '%'||#{search_community}||'%' 
				</when>
				<when test="head == 'nickname'">
					and nickname like '%'||#{search_community}||'%' 
				</when>
				<when test="head == 'board_content'">
					and board_content like '%'||#{search_community}||'%' 
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 게시글 추가 -->
	<insert id="addArticle" parameterType="communityVO">
		<![CDATA[
			INSERT INTO boardtbl(board_num, board_title, id, board_view, board_genre, board_content) 
			VALUES((SELECT NVL(MAX(board_num),0)+1 FROM boardtbl), #{board_title}, #{id}, 0, #{board_genre}, #{board_content})
		]]>
	</insert>
	
	<!-- 한 게시글 상세 보기 -->
	<select id="viewArticle" resultType="communityVO" parameterType="int">
		<![CDATA[
			SELECT * FROM boardtbl WHERE board_num=#{board_num}
		]]>
	</select>
	
	<!-- 조회수 올리기 -->
	<update id="updateBoardView" parameterType="int">
		<![CDATA[
			UPDATE boardtbl SET board_view=board_view+1 WHERE board_num=#{board_num}
		]]>
	</update>
	
	<!-- 닉네임 가져오기 -->
	<select id="getNickname" resultType="String" parameterType="String">
		<![CDATA[
			SELECT nickname FROM jointbl WHERE id=#{id}
		]]>
	</select>
	
	<!-- 좋아요를 눌렀었는지 여부 확인 -->
	<select id="likeIs" resultType="String" parameterType="communityVO">
		<![CDATA[
			SELECT DECODE(count(*), 1, 'true', 'false') 
			AS RESULT FROM liketbl 
			WHERE id=#{id} and board_num=#{board_num}
		]]>
	</select>
	
	<!-- 좋아요 개수 가져오기 -->
	<select id="getBoardLike" resultType="_int" parameterType="int">
		<![CDATA[
			SELECT NVL(count(*),0) AS board_like FROM liketbl WHERE board_num=#{board_num}
		]]>
	</select>
	
	<!-- 좋아요 추가 -->
	<insert id="addLike" parameterType="communityVO">
		<![CDATA[
			INSERT INTO liketbl (id, board_num) 
			VALUES(#{id}, #{board_num})
		]]>
	</insert>
	
	<!-- 좋아요 취소 -->
	<delete id="delLike" parameterType="communityVO">
		<![CDATA[
			DELETE FROM liketbl WHERE id=#{id} AND board_num=#{board_num}
		]]>
	</delete>
	
	<!-- 페이징 처리 후 게시글 조회 -->
	<select id="pagingBoard" resultMap="communityResult" parameterType="bookae.util.PagingVO">
			SELECT * FROM 
			(SELECT ROWNUM rn, A.* FROM 
			(SELECT board_num, board_title, board_genre, 
			(SELECT NVL(count(*),0) FROM liketbl WHERE board_num=b.board_num) as board_like,  
			board_date, j.nickname  
			FROM boardtbl b, jointbl j WHERE b.id=j.id 
			<if test="head != '' and head != null">
				<choose>
					<when test="head == 'total'">
						and (nickname like '%'||#{search_community}||'%' 
			            or board_title like '%'||#{search_community}||'%' 
			            or board_content like '%'||#{search_community}||'%') 
					</when>
					<when test="head == 'board_title'">
						and (board_title like '%'||#{search_community}||'%') 
					</when>
					<when test="head == 'nickname'">
						and (nickname like '%'||#{search_community}||'%') 
					</when>
					<when test="head == 'board_content'">
						and (board_content like '%'||#{search_community}||'%') 
					</when>
				</choose>
			</if>
			ORDER BY board_num desc) A
			)
			WHERE rn BETWEEN #{start} AND #{end}
	</select>
	
</mapper>