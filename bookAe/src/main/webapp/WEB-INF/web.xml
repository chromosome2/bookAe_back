<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>bookAe</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>default.htm</welcome-file>
  </welcome-file-list>
  
  <!-- ContextLoaderListener는 contextConfigLocation를 읽어서 RootApplicationContext를 생성. -->
  <listener>
  	<listener-class>
  		org.springframework.web.context.ContextLoaderListener
  	</listener-class>
  </listener>
  
  <!-- ContextLoaderListener를 이용해 빈 설정 XML 파일들을 읽어 들임. -->
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>
  		<!-- 애플리케이션 실행시 ContextLoaderListener로 해당 위치의 설정 파일을 읽어들임. -->
  		/WEB-INF/config/action-mybatis.xml
  	</param-value>
  </context-param>
  
  <!-- encoding 설정 -->
  <filter>
  	<filter-name>encodingFilter</filter-name>
  	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  	<init-param>
  		<param-name>encoding</param-name>
  		<param-value>UTF-8</param-value>
  	</init-param>
  </filter>
  
  <filter-mapping>
  	<filter-name>encodingFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <servlet>
  	<servlet-name>action</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>action</servlet-name>
  	<url-pattern>*.do</url-pattern>
  </servlet-mapping>
  
  <!-- 시작페이지 설정 -->
  <welcome-file-list>
  	<welcome-file>/WEB-INF/views/index.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>

<!-- 
클라이언트의 요청을 처리하는 DispatcherServlet.
웹 어플리케이션 컨텍스트 단위의 설정을 로드하는 ContextLoaderListener,
이건 꼭 거쳤으면 좋겠네. Filter. 

클라이언트의 요청을 처리하기위해서는
첫째, 클라이언트의 요청을 처리해줄 컨트롤러를 찾는다.
둘째, 컨트롤러를 실행시킨다. (비지니스 로직 처리)
셋째, 클라이언트에게 보여질 View를 찾는다.
넷째, 응답 데이터와 View를 클라이언트에게 전달한다.

-->